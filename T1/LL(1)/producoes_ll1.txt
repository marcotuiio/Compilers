START -> E $
PROG -> algoritmo id ; BV PF BC .
PF -> DPROC PF
PF -> DF PF
PF -> ''
DPROC -> procedimento id PARAM ; DPARAM BV BC ;
DF -> funcao id : TB ; DPARAM BV BC ;
PARAM -> ( DI )
PARAM -> ''
DPARAM -> DS
DPARAM -> ''
BV -> variaveis DS
BV -> ''
DS -> DV DS_PRIME
DS -> DT DS_PRIME
DS_PRIME -> DS
DS_PRIME -> ''
DT -> tipo id = VM [ DIMEN ] TB ;
DV -> TB : DI ;
DI -> id DI_PRIME
DI_PRIME -> , DI
DI_PRIME -> ''
VM -> vetor
VM -> matriz
DIMEN -> num_int : num_int DIMEN_PRIME
DIMEN_PRIME -> , DIMEN
DIMEN -> ''
TB -> inteiro
TB -> real
TB -> logico
TB -> id
BC -> inicio LC fim
LC -> C ; LC_PRIME
LC_PRIME -> LC
LC_PRIME -> ''
C -> id C_PRIME1
C_PRIME1 -> ( EI )
C_PRIME1 -> ''
C_PRIME -> V <- E
C -> se E entao LC C_PRIME2
C_PRIME2 -> fim se
C_PRIME2 -> senao LC fim se
C -> enquanto E faca LC fim enquanto
C -> para id de E ate E C_PRIME3
C_PRIME3 -> faca LC fim para
C_PRIME3 -> passo E faca LC fim para
C -> repita LC ate E
C -> leia ( V )
C -> imprima ( EI )
E -> ES E_PRIME
E_PRIME -> = ES E_PRIME
E_PRIME -> <> ES E_PRIME
E_PRIME -> < ES E_PRIME
E_PRIME -> > ES E_PRIME
E_PRIME -> <= ES E_PRIME
E_PRIME -> >= ES E_PRIME
E_PRIME -> ''
ES -> T ES_PRIME
ES -> + T ES_PRIME
ES -> - T ES_PRIME
ES_PRIME -> + T ES_PRIME
ES_PRIME -> - T ES_PRIME
ES_PRIME -> ou T ES_PRIME
E_PRIME -> ''
T -> F T_PRIME
T_PRIME -> * F T_PRIME
T_PRIME -> / F T_PRIME
T_PRIME -> div F T_PRIME
T_PRIME -> e F T_PRIME
T_PRIME -> ''
F -> nao F
F -> num_int
F -> num_real
F -> verdadeiro
F -> falso
F -> string
F -> id F_PRIME
F_PRIME -> ( EI )
F_PRIME -> V
V -> id V_PRIME
V_PRIME -> [ EI ]
V_PRIME -> ''
EI -> E EI_PRIME
EI_PRIME -> , EI
EI_PRIME -> ''